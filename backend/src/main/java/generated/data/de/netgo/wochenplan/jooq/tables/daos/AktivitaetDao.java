/*
 * This file is generated by jOOQ.
 */
package de.netgo.wochenplan.jooq.tables.daos;


import de.netgo.wochenplan.jooq.tables.Aktivitaet;
import de.netgo.wochenplan.jooq.tables.records.AktivitaetRecord;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class AktivitaetDao extends DAOImpl<AktivitaetRecord, de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet, UUID> {

    /**
     * Create a new AktivitaetDao without any configuration
     */
    public AktivitaetDao() {
        super(Aktivitaet.AKTIVITAET, de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet.class);
    }

    /**
     * Create a new AktivitaetDao with an attached configuration
     */
    @Autowired
    public AktivitaetDao(Configuration configuration) {
        super(Aktivitaet.AKTIVITAET, de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet.class, configuration);
    }

    @Override
    public UUID getId(de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Aktivitaet.AKTIVITAET.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet> fetchById(UUID... values) {
        return fetch(Aktivitaet.AKTIVITAET.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet fetchOneById(UUID value) {
        return fetchOne(Aktivitaet.AKTIVITAET.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet> fetchOptionalById(UUID value) {
        return fetchOptional(Aktivitaet.AKTIVITAET.ID, value);
    }

    /**
     * Fetch records that have <code>wochenplan_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet> fetchRangeOfWochenplanId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Aktivitaet.AKTIVITAET.WOCHENPLAN_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>wochenplan_id IN (values)</code>
     */
    public List<de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet> fetchByWochenplanId(UUID... values) {
        return fetch(Aktivitaet.AKTIVITAET.WOCHENPLAN_ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Aktivitaet.AKTIVITAET.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet> fetchByName(String... values) {
        return fetch(Aktivitaet.AKTIVITAET.NAME, values);
    }

    /**
     * Fetch records that have <code>wochentag BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet> fetchRangeOfWochentag(String lowerInclusive, String upperInclusive) {
        return fetchRange(Aktivitaet.AKTIVITAET.WOCHENTAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>wochentag IN (values)</code>
     */
    public List<de.netgo.wochenplan.jooq.tables.pojos.Aktivitaet> fetchByWochentag(String... values) {
        return fetch(Aktivitaet.AKTIVITAET.WOCHENTAG, values);
    }
}
